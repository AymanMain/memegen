"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/imgur.ts":
/*!**************************!*\
  !*** ./src/lib/imgur.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteFileFromImgur: () => (/* binding */ deleteFileFromImgur),\n/* harmony export */   uploadFileToImgur: () => (/* binding */ uploadFileToImgur)\n/* harmony export */ });\n// Validate Imgur configuration\nif (false) {}\n// Helper function to upload files to Imgur\nasync function uploadFileToImgur(file) {\n    let title = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'Meme Upload';\n    try {\n        // Convert File/Blob to base64\n        const base64 = await new Promise((resolve, reject)=>{\n            const reader = new FileReader();\n            reader.onload = ()=>{\n                const base64String = reader.result;\n                // Remove the data URL prefix (e.g., \"data:image/jpeg;base64,\")\n                const base64 = base64String.split(',')[1];\n                resolve(base64);\n            };\n            reader.onerror = reject;\n            reader.readAsDataURL(file);\n        });\n        // Upload to our API route\n        const response = await fetch('/api/imgur/upload', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                image: base64,\n                title\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.error || 'Failed to upload to Imgur');\n        }\n        return {\n            url: data.url,\n            deleteHash: data.deleteHash,\n            error: null\n        };\n    } catch (error) {\n        console.error('Error uploading file to Imgur:', error);\n        return {\n            url: '',\n            deleteHash: '',\n            error: error\n        };\n    }\n}\n// Helper function to delete files from Imgur\nasync function deleteFileFromImgur(deleteHash) {\n    try {\n        const response = await fetch(\"/api/imgur/delete?deleteHash=\".concat(deleteHash), {\n            method: 'DELETE'\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.error || 'Failed to delete from Imgur');\n        }\n        return {\n            error: null\n        };\n    } catch (error) {\n        console.error('Error deleting file from Imgur:', error);\n        return {\n            error: error\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvaW1ndXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwrQkFBK0I7QUFDL0IsSUFBSSxLQUF3QyxFQUFFLEVBRTdDO0FBRUQsMkNBQTJDO0FBQ3BDLGVBQWVJLGtCQUNwQkMsSUFBaUI7UUFDakJDLFFBQUFBLGlFQUFnQjtJQUVoQixJQUFJO1FBQ0YsOEJBQThCO1FBQzlCLE1BQU1DLFNBQVMsTUFBTSxJQUFJQyxRQUFnQixDQUFDQyxTQUFTQztZQUNqRCxNQUFNQyxTQUFTLElBQUlDO1lBQ25CRCxPQUFPRSxNQUFNLEdBQUc7Z0JBQ2QsTUFBTUMsZUFBZUgsT0FBT0ksTUFBTTtnQkFDbEMsK0RBQStEO2dCQUMvRCxNQUFNUixTQUFTTyxhQUFhRSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3pDUCxRQUFRRjtZQUNWO1lBQ0FJLE9BQU9NLE9BQU8sR0FBR1A7WUFDakJDLE9BQU9PLGFBQWEsQ0FBQ2I7UUFDdkI7UUFFQSwwQkFBMEI7UUFDMUIsTUFBTWMsV0FBVyxNQUFNQyxNQUFNLHFCQUFxQjtZQUNoREMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CQyxPQUFPbkI7Z0JBQ1BEO1lBQ0Y7UUFDRjtRQUVBLE1BQU1xQixPQUFPLE1BQU1SLFNBQVNTLElBQUk7UUFFaEMsSUFBSSxDQUFDVCxTQUFTVSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJMUIsTUFBTXdCLEtBQUtHLEtBQUssSUFBSTtRQUNoQztRQUVBLE9BQU87WUFDTEMsS0FBS0osS0FBS0ksR0FBRztZQUNiQyxZQUFZTCxLQUFLSyxVQUFVO1lBQzNCRixPQUFPO1FBQ1Q7SUFDRixFQUFFLE9BQU9BLE9BQU87UUFDZEcsUUFBUUgsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDaEQsT0FBTztZQUFFQyxLQUFLO1lBQUlDLFlBQVk7WUFBSUYsT0FBT0E7UUFBZTtJQUMxRDtBQUNGO0FBRUEsNkNBQTZDO0FBQ3RDLGVBQWVJLG9CQUNwQkYsVUFBa0I7SUFFbEIsSUFBSTtRQUNGLE1BQU1iLFdBQVcsTUFBTUMsTUFBTSxnQ0FBMkMsT0FBWFksYUFBYztZQUN6RVgsUUFBUTtRQUNWO1FBRUEsTUFBTU0sT0FBTyxNQUFNUixTQUFTUyxJQUFJO1FBRWhDLElBQUksQ0FBQ1QsU0FBU1UsRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSTFCLE1BQU13QixLQUFLRyxLQUFLLElBQUk7UUFDaEM7UUFFQSxPQUFPO1lBQUVBLE9BQU87UUFBSztJQUN2QixFQUFFLE9BQU9BLE9BQU87UUFDZEcsUUFBUUgsS0FBSyxDQUFDLG1DQUFtQ0E7UUFDakQsT0FBTztZQUFFQSxPQUFPQTtRQUFlO0lBQ2pDO0FBQ0YiLCJzb3VyY2VzIjpbIkQ6XFxQcm9qZWN0c1xcbWVtZWdlblxcc3JjXFxsaWJcXGltZ3VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFZhbGlkYXRlIEltZ3VyIGNvbmZpZ3VyYXRpb25cclxuaWYgKCFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19JTUdVUl9DTElFTlRfSUQpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgcmVxdWlyZWQgSW1ndXIgY29uZmlndXJhdGlvbi4gUGxlYXNlIGNoZWNrIHlvdXIgLmVudi5sb2NhbCBmaWxlLicpO1xyXG59XHJcblxyXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gdXBsb2FkIGZpbGVzIHRvIEltZ3VyXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGxvYWRGaWxlVG9JbWd1cihcclxuICBmaWxlOiBGaWxlIHwgQmxvYixcclxuICB0aXRsZTogc3RyaW5nID0gJ01lbWUgVXBsb2FkJ1xyXG4pOiBQcm9taXNlPHsgdXJsOiBzdHJpbmc7IGRlbGV0ZUhhc2g6IHN0cmluZzsgZXJyb3I6IEVycm9yIHwgbnVsbCB9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIENvbnZlcnQgRmlsZS9CbG9iIHRvIGJhc2U2NFxyXG4gICAgY29uc3QgYmFzZTY0ID0gYXdhaXQgbmV3IFByb21pc2U8c3RyaW5nPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgYmFzZTY0U3RyaW5nID0gcmVhZGVyLnJlc3VsdCBhcyBzdHJpbmc7XHJcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBkYXRhIFVSTCBwcmVmaXggKGUuZy4sIFwiZGF0YTppbWFnZS9qcGVnO2Jhc2U2NCxcIilcclxuICAgICAgICBjb25zdCBiYXNlNjQgPSBiYXNlNjRTdHJpbmcuc3BsaXQoJywnKVsxXTtcclxuICAgICAgICByZXNvbHZlKGJhc2U2NCk7XHJcbiAgICAgIH07XHJcbiAgICAgIHJlYWRlci5vbmVycm9yID0gcmVqZWN0O1xyXG4gICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFVwbG9hZCB0byBvdXIgQVBJIHJvdXRlXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2ltZ3VyL3VwbG9hZCcsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgaW1hZ2U6IGJhc2U2NCxcclxuICAgICAgICB0aXRsZSxcclxuICAgICAgfSksXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGRhdGEuZXJyb3IgfHwgJ0ZhaWxlZCB0byB1cGxvYWQgdG8gSW1ndXInKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBcclxuICAgICAgdXJsOiBkYXRhLnVybCwgXHJcbiAgICAgIGRlbGV0ZUhhc2g6IGRhdGEuZGVsZXRlSGFzaCxcclxuICAgICAgZXJyb3I6IG51bGwgXHJcbiAgICB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGxvYWRpbmcgZmlsZSB0byBJbWd1cjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4geyB1cmw6ICcnLCBkZWxldGVIYXNoOiAnJywgZXJyb3I6IGVycm9yIGFzIEVycm9yIH07XHJcbiAgfVxyXG59XHJcblxyXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZGVsZXRlIGZpbGVzIGZyb20gSW1ndXJcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUZpbGVGcm9tSW1ndXIoXHJcbiAgZGVsZXRlSGFzaDogc3RyaW5nXHJcbik6IFByb21pc2U8eyBlcnJvcjogRXJyb3IgfCBudWxsIH0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9pbWd1ci9kZWxldGU/ZGVsZXRlSGFzaD0ke2RlbGV0ZUhhc2h9YCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yIHx8ICdGYWlsZWQgdG8gZGVsZXRlIGZyb20gSW1ndXInKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBlcnJvcjogbnVsbCB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZWxldGluZyBmaWxlIGZyb20gSW1ndXI6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yIGFzIEVycm9yIH07XHJcbiAgfVxyXG59ICJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfSU1HVVJfQ0xJRU5UX0lEIiwiRXJyb3IiLCJ1cGxvYWRGaWxlVG9JbWd1ciIsImZpbGUiLCJ0aXRsZSIsImJhc2U2NCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImJhc2U2NFN0cmluZyIsInJlc3VsdCIsInNwbGl0Iiwib25lcnJvciIsInJlYWRBc0RhdGFVUkwiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaW1hZ2UiLCJkYXRhIiwianNvbiIsIm9rIiwiZXJyb3IiLCJ1cmwiLCJkZWxldGVIYXNoIiwiY29uc29sZSIsImRlbGV0ZUZpbGVGcm9tSW1ndXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/imgur.ts\n"));

/***/ })

});